version: '3'
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # If you decide to put a (docker) service on the gluetun network, you need
    # to add it's port here to be able to access it. It is however recommended
    # to only put your downloader (qbittorrent here) on the gluetun network.
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080 # qbittorrent
      # - 9117:9117 # Jackett
      # - 8989:8989 # Sonarr
      # - 7878:7878 # Radarr
      # - 8686:8686 # Lidarr
      # - 8787:8787 # Readarr
      # - 5055:5055 # Overseerr
      # - 8181:8181 # tautulli
      # - 6767:6767 # Bazarr
      # - 9696:9696 # Prowlarr
      # - 32400:32400 # Plex
      # - 3000:3000 # Homepage
    volumes:
      - ${DOCKERCONFDIR}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      # - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
      # - SERVER_REGIONS=Netherlands
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - TZ=${TZ}
      # - SERVER_CITIES=${SERVER_CITIES}
      - SERVER_REGIONS=${SERVER_REGIONS}
      # - SERVER_CATEGORIES=${SERVER_CATEGORIES}

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: 'service:gluetun'
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=Downloads
      - homepage.name=qBittorrent
      - homepage.icon=qbittorrent.svg
      - homepage.href=https://qbittorrent.${HOSTNAME}
      - homepage.description=Torrent Client
      - homepage.widget.type=qbittorrent
      - homepage.widget.url=https://qbittorrent.${HOSTNAME}
      - homepage.widget.username=${QBITTORRENT_USERNAME}
      - homepage.widget.password=${QBITTORRENT_PASSWORD}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
      - PRIVOXY_ENABLED=${QBITTORRENT_ENABLE_PRIVOXY}
      - WEBUI_PORTS=${QBITTORRENT_WEBUI_PORT}/tcp,${QBITTORRENT_WEBUI_PORT}/udp # Optional only needed if you want to change the default 8080 WebUI port
    healthcheck: # https://github.com/qdm12/gluetun/issues/641#issuecomment-933856220
      test: 'curl -sf https://1.1.1.1/  || exit 1'
      interval: 1m
      timeout: 10s
      retries: 1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/qbittorrent:/config:rw
      - ${DOCKERSTORAGEDIR}/torrents:/data/torrents:rw
      - ${DOCKERSTORAGEDIR}/watch:/data/watch:rw
    restart: unless-stopped

  sabnzbd:
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd:latest
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=Downloads
      - homepage.name=sabnzbd
      - homepage.icon=sabnzbd.svg
      - homepage.href=https://sabnzbd.${HOSTNAME}
      - homepage.description=Usenet (nzb) Client
      - homepage.widget.type=sabnzbd
      - homepage.widget.url=https://sabnzbd.${HOSTNAME}
      - homepage.widget.key=${SABNZBD_API_KEY}
      # - homepage.widget.username=${QBITTORRENT_USERNAME}
      # - homepage.widget.password=${QBITTORRENT_PASSWORD}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 8090:8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - WEBUI_PORTS=8080/tcp,8080/udp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sabnzbd:/config
      - ${DOCKERSTORAGEDIR}/usenet:/data/usenet:rw

  # Index Manager
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Prowlar
      - homepage.icon=prowlarr.svg
      - homepage.href=https://prowlarr.${HOSTNAME}
      - homepage.description=Index Manager
      - homepage.widget.type=prowlarr
      - homepage.widget.url=https://prowlarr.${HOSTNAME}
      - homepage.widget.key=${PROWLARR_API_KEY}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 9696:9696
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/prowlarr:/config:rw

  # Movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Radarr
      - homepage.icon=radarr.svg
      - homepage.href=https://radarr.${HOSTNAME}
      - homepage.description=Movie Manager
      - homepage.widget.type=radarr
      - homepage.widget.url=https://radarr.${HOSTNAME}
      - homepage.widget.key=${RADARR_API_KEY}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  # TV Series
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Sonarr
      - homepage.icon=sonarr.svg
      - homepage.href=https://sonarr.${HOSTNAME}
      - homepage.description=TV Series Manager
      - homepage.widget.type=sonarr
      - homepage.widget.url=https://sonarr.${HOSTNAME}
      - homepage.widget.key=${SONARR_API_KEY}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  # Music
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Lidarr
      - homepage.icon=lidarr.svg
      - homepage.href=https://lidarr.${HOSTNAME}
      - homepage.description=Music Manager
      - homepage.widget.type=lidarr
      - homepage.widget.url=https://lidarr.${HOSTNAME}
      - homepage.widget.key=${LIDARR_API_KEY}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 8686:8686
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/lidarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  # Books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Readarr
      - homepage.icon=readarr.svg
      - homepage.href=https://readarr.${HOSTNAME}
      - homepage.description=Book Manager
      - homepage.widget.type=readarr
      - homepage.widget.url=https://readarr.${HOSTNAME}
      - homepage.widget.key=${READARR_API_KEY}
    #   - org.hotio.pullio.update=${PULLIO_UPDATE}
    #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
    ports:
      - 8787:8787
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/readarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  # Subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    # network_mode: service:gluetun
    restart: unless-stopped
    labels:
      - homepage.group=*Arr
      - homepage.name=Bazarr
      - homepage.icon=bazarr.svg
      - homepage.href=https://bazarr.${HOSTNAME}
      - homepage.description=Subtitles Manager
      - homepage.widget.type=bazarr
      - homepage.widget.url=https://bazarr.${HOSTNAME}
      - homepage.widget.key=${BAZARR_API_KEY}
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Los_Angeles
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/bazarr:/config
      - ${DOCKERSTORAGEDIR}:/data
    ports:
      - 6767:6767

  # Media Server
  # plex:
  #   image: lscr.io/linuxserver/plex:latest
  #   container_name: plex
  #   # network_mode: service:gluetun
  #   network_mode: host
  #   restart: unless-stopped
  #   logging:
  #     driver: json-file
  #     options:
  #       max-file: ${DOCKERLOGGING_MAXFILE}
  #       max-size: ${DOCKERLOGGING_MAXSIZE}
  #   labels:
  #     - homepage.group=Media
  #     - homepage.name=Plex
  #     - homepage.icon=plex.svg
  #     - homepage.href=https://plex.${HOSTNAME}
  #     - homepage.description=Plex Media Manager Manager
  #     - homepage.widget.type=plex
  #     - homepage.widget.url=https://plex.${HOSTNAME}
  #     - homepage.widget.key=${PLEX_API_KEY}
  #   #   - org.hotio.pullio.update=${PULLIO_UPDATE}
  #   #   - org.hotio.pullio.notify=${PULLIO_NOTIFY}
  #   #   - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
  #   # ports:
  #   #   - 32400:32400
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK=002
  #     - VERSION=docker
  #     - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
  #     - PLEX_ADVERTISE_URL=${PLEX_ADVERTISE_URL}
  #     - PLEX_NO_AUTH_NETWORKS=
  #     - PLEX_BETA_INSTALL=${PLEX_BETA_INSTALL}
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${DOCKERCONFDIR}/plex:/config:rw
  #     - ${DOCKERSTORAGEDIR}/media:/data/media:rw
  #   devices: # optional: if you have a Syno with an Intel CPU with quicksync and want hardware transcoding (only with Plex Pass) uncomment this line.
  #     - /dev/dri:/dev/dri # optional: if you have a Syno with an Intel CPU with quicksync and want hardware transcoding (only with Plex Pass) uncomment this line.
  #   tmpfs: # optional: if you have a Syno with enough RAM, you can uncomment this line to enable transcoding in RAM. uncomment this line.
  #     - /transcode # optional: if you have a Syno with enough RAM, you can uncomment this line to enable transcoding in RAM. uncomment this line.

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Overseerr
      - homepage.icon=overseerr.svg
      - homepage.href=https://overseerr.${HOSTNAME}
      - homepage.description=Request Manager
      - homepage.widget.type=overseerr
      - homepage.widget.url=https://overseerr.${HOSTNAME}
      - homepage.widget.key=${OVERSEERR_API_KEY}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/overseerr:/config
      - ${DOCKERSTORAGEDIR}:/data
    ports:
      - 5055:5055
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: ${PUID}:${PGID}
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    environment:
      # This does not work, setting user above does
      # - PUID=${PUID}
      # - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/recyclarr:/config

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    labels:
      - homepage.group=*Arr
      - homepage.name=Tautulli
      - homepage.icon=tautulli.svg
      - homepage.href=https://tautulli.${HOSTNAME}
      - homepage.description=Monitoring and tracking tool for Plex Media Server.
      - homepage.widget.type=tautulli
      - homepage.widget.url=https://tautulli.${HOSTNAME}
      - homepage.widget.key=${TAUTULLI_API_KEY}
      - homepage.widget.enableUser=true
      - homepage.widget.showEpisodeNumber=true
      - homepage.widget.expandOneStreamToTwoRows=false # optional, defaults to true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${DOCKERCONFDIR}/tautulli:/config
    ports:
      - 8181:8181

  # dashboard for your server
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    # network_mode: service:gluetun
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    environment:
      # Homepage has to run as root for auto-discovery to work
      # - PUID=${PUID}
      # - PGID=${PGID}
      - HOMEPAGE_ALLOWED_HOSTS=home.vilrokx.com
      - TZ=${TZ}
      - UMASK=002
    ports:
      - 3000:3000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
